.program stepper_precise
.wrap_target
pull_again:
    pull block 
    mov x, osr
loop:
    jmp x--, do_step
    jmp end
do_step:
    set pins, 1   [31] ;3
    set pins, 0   [29]   ;1
    jmp loop
end:
    irq 0 rel           ; 4 + SM
    jmp pull_again
.wrap

% c-sdk {
#include "hardware/clocks.h"

static inline void stepper_1_program_init(PIO pio, uint sm, uint offset, uint pin, float freq, bool step) {
    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    pio_sm_config c = stepper_precise_program_get_default_config(offset);
    sm_config_set_set_pins(&c, pin, 1);
   sm_config_set_out_shift(&c, false, false, 32);  
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    float div = clock_get_hz(clk_sys) / (freq*8);
    sm_config_set_clkdiv(&c, div);

    //pio_sm_put(pio,sm,200);
    while (!pio_sm_is_tx_fifo_empty(pio, sm)) {
    pio_sm_get(pio, sm);  // Lee y descarta datos si hubiera
    }


    
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_exec(pio, sm, pio_encode_irq_set(true, 4 + sm));
    pio_sm_set_enabled(pio, sm, true);
}

%}